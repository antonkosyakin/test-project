swagger: '2.0'
info:
  description: ''
  version: 1.5.0
  title: Dev Workspaces
host: workspaces.devfactory.com
basePath: /api

securityDefinitions:
   APIKeyHeader:
     type: apiKey
     in: header
     name: Authorization

security:
  - APIKeyHeader: []

paths:
  /userprofiles:
    post:
      summary: Create a user profile
      tags:
        - core
        - userprofile
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: All fields are required
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '409':
          description: Profile already exists
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /userprofile/{userId}:
    parameters:
        - in: path
          name: userId
          type: integer
          required: true
          description: Numeric id of the user profile to update
    get:
      summary: View a User Profile
      tags:
        - core
        - userprofile
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UserProfile'
        '404':
          description: User profile not found
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a user profile
      tags:
        - core
        - userprofile
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: UserProfile properties that are updateable
          required: true
          schema:
            $ref: '#/definitions/UserProfileUpdateable'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UserProfile'
        '400':
          description: Invalid parameters
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '404':
          description: User profile does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deactivate a user profile
      tags:
        - core
        - userprofile
      responses:
        '204':
          description: User Profile deactivated
        '404':
          description: User Profile does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /userprofile/clients:
    post:
      summary: Captures version of running client
      tags:
        - core
        - userprofile
        - client
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - os
              - version
            properties:
              id:
                type: string
                description: Unique ID of the client
              os:
                type: string
                description: OS the client is running on
                enum:
                  - mac
                  - windows
                  - linux
              version:
                type: string
                description: Version of the client
      security:
        - APIKeyHeader: []
      responses:
        200:
          description: Client has been successfully registered
          schema:
            properties:
              id:
                type: string
        400:
          description: All fields are required
          schema:
            $ref: '#/definitions/BadRequestDetails'
        500:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspaces:
    get:
      tags:
        - core
        - workspace
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkspaceList'
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Creates a workspace -OR- clone an existing workspace if source parameter is specified
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: source
          in: query
          description: if specified, contains the workspace to clone
          type: string
        - in: body
          name: body
          description: Workspace that will be created
          required: true
          schema:
            $ref: '#/definitions/WorkspaceConfigNew'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkspaceConfig'
        '400':
          description: Required fields should be populated
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '409':
          description: Workspace already exists (only when source parameter is not specified)
        '404':
          description: Workspace does not exist (only when source parameter is specified)
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
    get:
      summary: View a Workspace
      tags:
        - core
        - workspace
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/WorkspaceConfig'
        '404':
          description: Workspace not found
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Specify the image to be used by the workspace
      parameters:
        - in: body
          name: body
          description: Updateable properties for workspace config
          required: true
          schema:
            $ref: '#/definitions/WorkspaceConfigUpdateable'
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - core
        - workspace
      responses:
        '200':
          description: Workspace updated
          schema:
            $ref: '#/definitions/WorkspaceConfig'
        '400':
          description: Required fields should be populated
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/image:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
    post:
      summary: Specify the image to be used by the workspace
      parameters:
        - in: body
          name: body
          description: The details for the image
          required: true
          schema:
            $ref: '#/definitions/WorkspaceImage'
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Image for workspace set
          schema:
            $ref: '#/definitions/WorkspaceImage'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update details of the image used by the workspace
      parameters:
        - in: body
          name: body
          description: The updated details for the image
          required: true
          schema:
            $ref: '#/definitions/WorkspaceImage'
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Image for workspace set
          schema:
            $ref: '#/definitions/WorkspaceImage'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/env:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
    post:
      summary: Adds an environment variable to a workspace
      parameters:
        - in: body
          name: body
          description: The details for the environment variable
          required: true
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariable'
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Environment variable added to workspace
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariable'
        '400':
          description: Required fields should be present
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '409':
          description: Environment variable already exists
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariable'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/repos:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
    post:
      summary: Adds a repository to a workspace
      parameters:
        - in: body
          name: body
          description: The details for the repository
          required: true
          schema:
            $ref: '#/definitions/WorkspaceRepository'
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Repository added to workspace
          schema:
            $ref: '#/definitions/WorkspaceRepository'
        '400':
          description: Invalid or missing parameters
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '409':
          description: Repository already exists
          schema:
            $ref: '#/definitions/WorkspaceRepository'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Deletes a repository added to a workspace
      parameters:
        - in: query
          name: cloneUrl
          description: The clone URL of the repository
          required: true
          type: string
      tags:
        - core
        - workspace
      responses:
        '204':
          description: Repository deleted from the workspace
        '400':
          description: Missing parameter
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '404':
          description: Workspace or repository does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/env/{variableName}:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
      - name: variableName
        in: path
        description: the name the variable defined for the workpsace
        required: true
        type: string
    delete:
      summary: Deletes environment variable assigned to a workspace
      parameters:
        - in: body
          name: body
          description: The details for the environment variable
          required: true
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariable'
      tags:
        - core
        - workspace
      responses:
        '204':
          description: Environment variable deleted from the workspace
        '404':
          description: Workspace or environment variable does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update an environment variable for a workspace
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Environment variable properties that are updateable
          required: true
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariableUpdateable'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/WorkspaceEnvironmentVariableUpdateable'
        '400':
          description: Invalid parameters
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '404':
          description: Workspace or Environment Variable does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/ports:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
    post:
      summary: Adds a port to a workspace
      parameters:
        - in: body
          name: body
          description: The details for the port
          required: true
          schema:
            $ref: '#/definitions/WorkspacePort'
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Port added to workspace
          schema:
            $ref: '#/definitions/WorkspacePort'
        '400':
          description: Required fields should be present
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '409':
          description: Port already exists
          schema:
            $ref: '#/definitions/WorkspacePort'
        '404':
          description: Workspace does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

  /workspace/{workspaceId}/port/{portNumber}:
    parameters:
      - name: workspaceId
        in: path
        description: id of the workspace
        required: true
        type: string
      - name: portNumber
        in: path
        description: the port number
        required: true
        type: integer
        minimum: 0
        maximum: 65535
    delete:
      summary: Deletes a port assigned to a workspace
      tags:
        - core
        - workspace
      responses:
        '204':
          description: Port removed from the workspace
        '404':
          description: Workspace or port does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update a port
      tags:
        - core
        - workspace
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Port properties that are updateable
          required: true
          schema:
            $ref: '#/definitions/WorkspacePortUpdateable'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/WorkspacePort'
        '400':
          description: Invalid parameters
          schema:
            $ref: '#/definitions/BadRequestDetails'
        '404':
          description: Workspace or port does not exist
        default:
          description: An unexpected error has occurred
          schema:
            $ref: '#/definitions/Error'

definitions:
  UserProfileList:
    type: array
    items:
      $ref: '#/definitions/UserProfile'
  WorkspaceList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceConfig'
  AccessToken:
    type: object
    required:
      - accessToken
    properties:
      accessToken:
        type: string
        description: A valid GitHub personal access token
  UserProfile:
    type: object
    required:
      - email
      - accessToken
    properties:
      id:
        type: integer
        readOnly: true
      githubEmail:
        type: string
        description: The user's GitHub email address
      githubId:
        type: integer
        description: The user's GitHub id
      email:
        type: string
        description: The email address of the user
      username:
        type: string
        description: The user's GitHub username
      displayName:
        type: string
        description: The displayed name for a user
      accessToken:
        type: string
        description: The user's GitHub personal access token
      active:
        type: boolean
        description: Whether the user is an active user
      createdDate:
        type: string
        description: The date the record was created
      updatedDate:
        type: string
        description: The date the record was created

  UserProfileIdentifier:
    type: object
    properties:
      userId:
        type: integer
        description: the unique id for the user profile

  UserProfileUpdateable:
    type: object
    properties:
      email:
        type: string
        description: The email address of the user
      accessToken:
        type: string
        description: The user's GitHub personal access token

  WorkspaceConfig:
    type: object
    required:
      - name
      - owner
    allOf:
      - $ref: '#/definitions/WorkspaceConfigBase'
      - $ref: '#/definitions/WorkspaceConfigOwnerView'
      - $ref: '#/definitions/WorkspaceImage'

  WorkspaceConfigNew:
    type: object
    required:
      - name
      - owner
    allOf:
      - $ref: '#/definitions/WorkspaceConfigBase'
      - $ref: '#/definitions/WorkspaceConfigOwnerId'
      - $ref: '#/definitions/WorkspaceImage'

  WorkspaceConfigBase:
    type: object
    required:
      - name
      - owner
    allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name:
            type: string
            description: A unique name for the workspace
          owner:
            $ref: '#/definitions/UserProfile'
          excludePatterns:
            type: string
            description: Patterns that specify files and folders include from workspace synchronization
          active:
            type: boolean
            description: Whether the workspace is active or not
          readers:
            $ref: '#/definitions/UserProfileList'
          environmentVariables:
            $ref: '#/definitions/WorkspaceEnvironmentVariableList'
          ports:
            $ref: '#/definitions/WorkspacePortList'
          validationStatus:
            type: string
            enum:
              - validating
              - validated
              - incomplete
              - invalid
            default: validating
            description: the validation status of the workspace
          createdDate:
            type: string
            description: The date the record was created
          updatedDate:
            type: string
            description: The date the record was created
      - $ref: '#/definitions/WorkspaceImage'

  WorkspaceConfigOwnerView:
    type: object
    properties:
      owner:
        $ref: '#/definitions/UserProfile'

  WorkspaceConfigOwnerId:
    type: object
    properties:
      owner:
        type: integer
        description: The User Profile id of the workspace owner

  WorkspaceConfigUpdateable:
    type: object
    properties:
      excludePatterns:
        type: string
        description: Patterns that specify files and folders include from workspace synchronization

  WorkspaceImage:
    type: object
    properties:
      imageName:
        type: string
        description: The name for the container image for the workspace
      imageTag:
        type: string
        description: Tag for the image
      imageManifest:
        type: string
        description: The contents of the manifest for the image

  WorkspaceEnvironmentVariable:
    type: object
    properties:
      name:
        type: string
        description: The name of the environment variable
      description:
        type: string
        description: A description of the environment variable
      defaultValue:
        type: string
        description: A default value for the environment variable
      scope:
        type: string
        description: Scope of the environment variable
        default: private
        enum:
          - public
          - private
      createdDate:
        type: string
        description: The date the record was created
      updatedDate:
        type: string
        description: The date the record was created

  WorkspaceEnvironmentVariableUpdateable:
    type: object
    properties:
      description:
        type: string
        description: A description of the environment variable
      defaultValue:
        type: string
        description: A default value for the environment variable

  WorkspaceEnvironmentVariableList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceEnvironmentVariable'

  WorkspacePort:
    type: object
    properties:
      number:
        type: integer
        minimum: 0
        maximum: 65535
        description: The port number
      description:
        type: string
        description: A description of the port
      protocol:
        type: string
        description: The protocol that the port uses
      createdDate:
        type: string
        description: The date the record was created
      updatedDate:
        type: string
        description: The date the record was created

  WorkspacePortUpdateable:
    type: object
    properties:
      description:
        type: string
        description: A description of the port
      protocol:
        type: string
        description: The protocol that the port uses

  WorkspacePortList:
    type: array
    items:
      $ref: '#/definitions/WorkspacePort'

  WorkspaceRepository:
    type: object
    required:
      - cloneUrl
    properties:
      cloneUrl:
        type: string
        description: The Git clone url for a repository. In dfScmUrl format.
      createdDate:
        type: string
        description: The date the record was created
      updatedDate:
        type: string
        description: The date the record was created

  WorkspaceRepositoryList:
    type: array
    items:
      $ref: '#/definitions/WorkspaceRepository'

  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: string
        description: Code for the error that occurred
      message:
        type: string
        description: A descriptive message of the error that just occurred
  BadRequestDetails:
    type: object
    properties:
      details:
        type: string
        description: A description of what made the request invalid (e.g. invalid parameter value)